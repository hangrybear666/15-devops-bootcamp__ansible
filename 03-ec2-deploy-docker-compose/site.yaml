---
# - name: Get AWS credentials & login to ECR repository
#   hosts: localhost
#   roles:
#     - aws-docker-login-ecr

# - name: Build local image & push it to a ECR repo
#   hosts: localhost
#   roles:
#     - build-and-push-to-ecr

- name: Create new linux user for docker
  become: true
  become_method: sudo
  hosts: all
  roles:
    - create-permit-docker-user

- name: Install Docker & Docker Compose
  hosts: all
  become: yes
  vars:
    apt_cache_valid_seconds: 86400
  tasks:
    - name: Remove prior docker installations
      ansible.builtin.apt:
        name:
          - docker.io
          - docker-doc
          - docker-compose
          - docker-compose-v2
          - podman-docker
          - containerd
        state: absent

    - name: Install required system packages
      ansible.builtin.apt:
        name:
          - ca-certificates
          - curl
          - gnupg2
        state: latest
        update_cache: true
        force_apt_get: yes

    - name: Create Docker keyrings directory
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Download Docker GPG key
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644'

    - name: Add Docker Repository
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian bookworm stable
        state: present

    - name: Update apt and install Docker packages
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: latest
        update_cache: true
        force_apt_get: yes
        cache_valid_time: "{{ apt_cache_valid_seconds }}"

    - name: Start docker daemon
      ansible.builtin.systemd_service:
        name: docker
        state: started

# - name: Start docker containers
#   hosts: docker_server
#   vars_files:
#     - project-vars
#   tasks:
#     - name: Copy docker compose
#       copy:
#         src: /Users/nana/bootcamp-java-mysql-project/docker-compose-full.yaml
#         dest: /home/ec2-user/docker-compose.yaml
#       docker_login:
#         username: nanatwn
#     - name: Docker login
#         password: "{{docker_password}}"
#     - name: Start containers from compose
#       community.docker.docker_compose_v2:
#         project_src: /home/ec2-user
