---
- name: Install java and net-tools
  hosts: "{{ variable_host }}"
  roles:
    - install-legacy-java

# - name: Download and unpack Nexus installer
#   hosts: "{{ variable_host }}"
#   tasks:
#     - name: Check nexus folder stats
#       stat:
#         path: /opt/nexus
#       register: stat_result
#     - name: Download Nexus
#       get_url:
#         url: https://download.sonatype.com/nexus/3/latest-unix.tar.gz
#         dest: /opt/
#       register: download_result
#     - name: Untar Nexus installer
#       unarchive:
#         src: "{{download_result.dest}}"
#         dest: /opt/
#         remote_src: yes
#       when: not stat_result.stat.exists
#     - name: Find nexus folder
#       find:
#         paths: /opt
#         pattern: "nexus-*"
#         file_type: directory
#       register: find_result
#     - name: Rename nexus folder
#       shell: mv {{find_result.files[0].path}} /opt/nexus
#       when: not stat_result.stat.exists

# - name: Create nexus user to own nexus folder
#   hosts: "{{ variable_host }}"
#   tasks:
#     - name: Ensure group nexus exists
#       group:
#         name: nexus
#         state: present
#     - name: Create nexus user
#       user:
#         name: nexus
#         group: nexus
#     - name: Make nexus user owner of nexus folder
#       file:
#         path: /opt/nexus
#         state: directory
#         owner: nexus
#         group: nexus
#         recurse: yes
#     - name: Make nexus user owner of sonatype-work folder
#       file:
#         path: /opt/sonatype-work
#         state: directory
#         owner: nexus
#         group: nexus
#         recurse: yes

# - name: Start nexus with nexus user
#   hosts: "{{ variable_host }}"
#   become: True
#   become_user: nexus
#   tasks:
#     - name: Set run_as_user nexus
#       lineinfile:
#         path: /opt/nexus/bin/nexus.rc
#         regexp: '^#run_as_user=""'
#         line: run_as_user="nexus"
#     - name: Start nexus
#       command: /opt/nexus/bin/nexus start

# - name: Verify nexus running
#   hosts: "{{ variable_host }}"
#   tasks:
#     - name: Check with ps
#       shell: ps aux | grep nexus
#       register: app_status
#     - debug: msg={{app_status.stdout_lines}}
#     - name: Wait one minute
#       pause:
#         minutes: 1
#     - name: Check with netstat
#       shell: netstat -plnt
#       register: app_status
#     - debug: msg={{app_status.stdout_lines}}