pipeline {
  agent any
  environment {
    ANSIBLE_SERVER = "172.104.139.219"
  }
  stages {
    // stage("Git Checkout SCM") {
    //   steps {
    //     git branch: 'main', credentialsId: 'git-creds', url: 'https://github.com/hangrybear666/15-devops-bootcamp__ansible.git'
    //   }
    // }

    stage("copy files to ansible server") {
      steps {
        dir('07-jenkins-ansible-integration') {
          script {
            echo "copying all neccessary files to ansible control node"
            sshagent(['control-node-pk']) {
              sh "scp -o StrictHostKeyChecking=no -r ./* root@${ANSIBLE_SERVER}:/root/07-jenkins-ansible-integration"

              withCredentials([sshUserPrivateKey(credentialsId: 'ec2-targets-pk', keyFileVariable: 'keyfile', usernameVariable: 'user')]) {
                sh 'scp $keyfile root@$ANSIBLE_SERVER:/root/.ssh/ec2-targets-pk.pem'
              }
            }
          }
        }
      }
    }
    // stage ("execute ansible playbook") {
    //   steps {
    //     script {
    //       echo "calling ansible playbook to configure ec2 instances"
    //       def remote = [:]
    //       remote.name = "ansible-server"
    //       remote.host = ANSIBLE_SERVER
    //       remote.allowAnyHosts = true

    //       withCredentials([sshUserPrivateKey(credentialsId: 'ansible-server-key', keyFileVariable: 'keyfile', usernameVariable: 'user')]) {
    //         remote.user = user
    //         remote.identityFile = keyfile
    //         sshScript remote: remote, script: "prepare-ansible-server.sh"
    //         sshCommand remote: remote, command: "ansible-playbook my-playbook.yaml"
    //       }
    //     }
    //   }
    // }
  }
}
